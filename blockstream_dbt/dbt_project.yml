name: "blockstream_dbt"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "blockstream_dbt"

# These configurations specify where dbt should look for different types of files.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:
  - "target"
  - "dbt_packages"
  - "logs"

# Global variables
vars:
  # Date handling
  target_date: "{{ run_started_at.strftime('%Y%m%d') }}"
  lookback_days: 90

  # Data quality thresholds
  min_quality_score: 0.75
  max_anomaly_rate: 0.1

  # Business logic
  major_coins:
    [
      "BTCUSD",
      "ETHUSD",
      "ADAUSD",
      "SOLUSD",
      "DOTUSD",
      "LINKUSD",
      "AVAXUSD",
      "MATICUSD",
      "ATOMUSD",
      "ALGOUSD",
    ]
  stablecoins: ["USDTUSD", "USDCUSD", "DAIUSD", "BUSDUSD"]

# Model configurations
models:
  blockstream_dbt:
    # Staging models
    staging:
      +materialized: view
      +tags: ["staging"]
      schema: staging

    # Intermediate models
    intermediate:
      +materialized: view
      +tags: ["intermediate"]
      schema: intermediate

    # Marts (analytics-ready tables)
    marts:
      +materialized: table
      +tags: ["mart"]
      +post-hook: "{{ log('Completed building mart: ' ~ this, info=true) }}"
      schema: analytics

      # Core business entities
      core:
        +tags: ["mart", "core"]

      # Financial metrics
      finance:
        +tags: ["mart", "finance"]

    # Monitoring and metadata
    meta:
      +materialized: table
      +tags: ["meta", "monitoring"]
      schema: meta

# Test configurations
tests:
  +store_failures: true
  +severity: error

# Snapshots
snapshots:
  blockstream_dbt:
    +target_schema: snapshots
    +strategy: timestamp
    +updated_at: last_updated

# Seeds
seeds:
  blockstream_dbt:
    +schema: ref

# Macros
dispatch:
  - macro_namespace: dbt
    search_order: ["blockstream_dbt", "dbt"]

# Hooks
on-run-start:
  - "{{ log('=== BlockStream dbt run started at ' ~ run_started_at.strftime('%Y-%m-%d %H:%M:%S UTC') ~ ' ===', info=true) }}"
  - "CREATE SCHEMA IF NOT EXISTS {{ target.schema }}"
  - "CREATE SCHEMA IF NOT EXISTS staging"
  - "CREATE SCHEMA IF NOT EXISTS intermediate"
  - "CREATE SCHEMA IF NOT EXISTS analytics"
  - "CREATE SCHEMA IF NOT EXISTS meta"

on-run-end:
  - "{{ log('=== BlockStream dbt run completed successfully ===', info=true) }}"
  - "{{ audit_run_results() }}"
